#!/usr/bin/env python3
#Algorithm for Assignment 2
#Purpose of this algorithm is to produce daily, weekly and monthly usage reports by a user or by remote host.

#Firsly, I will want to provide a list of all users that logged in and out of the system with the last -f

#Within my program I will import modules that would be necessary such as the os module, time module and the argparse module.

#I will include argument options at the command line:(This was supplied)
#parser = argparse.ArgumentParser(description="Usage Report based on the last command",epilog="Copyright 2018 - Raymond Chan")
#parser.add_argument("-l", "--list", type=str, choices=['user','host'], help="generate user name or remote host IP from the given files")
#parser.add_argument("-r", "--rhost", help="usage report for the given remote host IP")
#parser.add_argument("-t","--type", type=str, choices=['daily','weekly','monthly'], help="type of report: daily, weekly, and monthly")
#parser.add_argument("-u", "--user", help="usage report for the given user name")
#parser.add_argument("-v","--verbose", action="store_true",help="turn on output verbosity")
#parser.add_argument("files",metavar='F', type=str, nargs='+',help="list of files to be processed")
#args=parser.parse_args()
if args.verbose:
    print('Files to be processed:',args.files)
    print('Type of args for files',type(args.files))
    if args.user:
        print('usage report for user:',args.user)
    if args.rhost:
        print('usage report for remote host:',args.rhost)
    if args.type:
        print('usage report type:',args.type)
#I will also need to have logs in human readable form so I will normalize the logs for this.       
#I will also differenciate login and logout times by seconds.
#I will aso assign login and logout logs per users.
#I will also check if the users login and logout dates are the same
#After I will select a record from a specific user.
#With the records acquired from that user and I will create a daily, monthly and weekly report.
